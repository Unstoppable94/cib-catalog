.catalog:
  name: "Elasticsearch"
  version: v5.3.1
  description: "云宏定制版本，采集docker log 及systemd log，要求docker 日志采用json-file 模式"
  questions:
    - variable: "cluster_name"
      type: "string"
      required: true
      label: "Cluster name"
      description: "Name of the Elasticsearch Cluster"
      default: "es-cluster"
    - variable: "UPDATE_SYSCTL"
      label: "Update host sysctl:"
      description: |
        Set true to avoid vm.max_map_count errors.
        WARN: If set true, host param vm.max_map_count will be update to 262144.
      default: false
      required: true
      type: enum
      options:
      - false
      - true
    - variable: "client_heap_size"
      type: "string"
      required: true
      label: "Heap size (client nodes)"
      description: "Heap size to be allocated for Java (client nodes)"
      default: "6g"
    - variable: "client_mem_limit"
      type: "int"
      required: true
      label: "Memory limit in byte (master nodes)"
      description: "Memory limit in Byte per elasticsearch container. AT LEAST double the heap size!defaule 14G (client nodes)"
      default: 15032385536
    - variable: "initial_client_nodes"
      type: "int"
      required: true
      label: "# of initial client nodes"
      description: "Set the initial number of client nodes"
      default: 1
  services:
  elasticsearch-clients:
    scale: ${initial_client_nodes}
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 9200
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      strategy: recreate
      reinitializing_timeout: 60000
  dockerlog-fluentd:
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 24224
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      strategy: recreate
      reinitializing_timeout: 60000
  systemd-fluentd:
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 24224
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      strategy: recreate
      reinitializing_timeout: 60000
  kibana-5:
    scale: 1
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 5601
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      strategy: recreate
      reinitializing_timeout: 60000
  


